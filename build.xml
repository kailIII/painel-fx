<?xml version="1.0" encoding="UTF-8"?>
<project name="novosga-painel-client" default="dist" basedir="." xmlns:fx="javafx:com.sun.javafx.tools.ant">
    <description>Novo SGA Ant tasks - Painel Client</description>

    <property name="project" value="novosga" />    
    <property name="appname" value="${project}-painel" />
    <property name="src" location="src" />
    <property name="distfiles" location="dist-files" />
    <property name="dist" location="dist" />
    <property name="build" location="build" />
    <property name="build.src" location="${build}/src" />
    <property name="build.classes" location="${build}/classes" />
    <property name="build.dist" location="${build}/dist" />
    <property name="jrelib" location="${java.home}/lib/jfxrt.jar" />
    <property name="jdklib" location="${java.home}/../lib/ant-javafx.jar" />
    
    <!--
        init
    -->
    <target name="init" depends="clean" description="Cria pastas destino.">
        <mkdir dir="${dist}" />
        <mkdir dir="${build}" />
        <mkdir dir="${build.classes}" />
        <mkdir dir="${build.dist}" />
    </target>

    <!--
        compile
    -->
    <target name="compile" depends="init" description="Compila o código.">
        <copy todir="${build.src}">
            <fileset dir="${src}" />
        </copy>
        <!-- substituindo a versao -->
        <replace file="${build.src}/org/novosga/painel/client/Main.java" token="{version}" value="${version}" />
        <taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpath=".:${jdklib}" />
        <javac includeantruntime="false" srcdir="${build.src}" destdir="${build.classes}" classpath="${jrelib}" />
    </target>

    <!--
        jar
    -->
    <target name="jar" depends="compile" description="Cria o arquivo jar">
        <!-- copying resources -->
        <property name="fonts.dir" value="org/novosga/painel/client/fonts" />
        <copy todir="${build.classes}">
            <fileset dir="${src}">
                <include name="**/*.properties" />
            </fileset>
        </copy>
        <copy todir="${build.classes}/${fonts.dir}">
            <fileset dir="${src}/${fonts.dir}">
                <include name="*.ttf" />
            </fileset>
        </copy>
        <fx:application id="PainelFXApp"
            name="PainelFX"
            mainClass="org.novosga.painel.client.Main"
            fallbackClass="com.javafx.main.NoJavaFXFallback" />
        <fx:jar destfile="${build.dist}/${distname}.jar">
            <fx:application refid="PainelFXApp" />
            <manifest>
                <attribute name="Implementation-Vendor" value="${application.vendor}" />
                <attribute name="Implementation-Title" value="${application.title}" />
                <attribute name="Implementation-Version" value="1.0" />
            </manifest>
            <fileset dir="${build.classes}"/>
        </fx:jar>
    </target>
    
    <!--
        pre-dist: copia os arquivos necessarios para gerar o compactado
    -->
    <target name="pre-dist" depends="jar" description="copia os arquivos necessarios para gerar o compactado">
        <copy todir="${build.dist}/ui">
            <fileset dir="ui" />
        </copy>
        <copy todir="${build.dist}/media">
            <fileset dir="media" />
        </copy>
        <copy todir="${build.dist}">
            <fileset dir="${distfiles}">
                <include name="**/*" />
            </fileset>
        </copy>
        <!-- substituindo a versao -->
        <replace file="${build.dist}/ui/jfx/main.fxml" token="{version}" value="${version}" />
        <!-- substituindo nome do jar (executavel) -->
        <replace file="${build.dist}/painel.bat" token="{distname}" value="${distname}" />
        <replace file="${build.dist}/painel.sh" token="{distname}" value="${distname}" />
    </target>
    
    <!--
        dist: gera arquivo compactado para distribuicao no formato escolhido
    -->
    <target name="dist" description="Gera um arquivo compactado da aplicacao">
        <input message="Informe a versão:" addproperty="version" />
        <input message="Gerar arquivo em qual formato?" addproperty="dist-format" validargs="zip,tgz" defaultvalue="tgz" />
        <property name="distname" value="${appname}-client-${version}" />
        <antcall target="dist-${dist-format}" />
        <delete dir="${build}" />
    </target>

    <!--
        dist
    -->
    <target name="dist-tgz" depends="pre-dist" description="Gera uma tgz do painel">
        <tar destfile="${dist}/${distname}.tgz" compression="gzip">
            <tarfileset dir="${build.dist}" mode="755" username="root" group="root" prefix="${distname}/">
            </tarfileset>
        </tar>
    </target>

    <!--
        dist-zip
    -->
    <target name="dist-zip" depends="pre-dist" description="Gera uma zip do painel">
        <zip destfile="${dist}/${distname}.zip">
            <zipfileset dir="${build.dist}" prefix="${distname}">
            </zipfileset>
        </zip>
    </target>

    <!--
        clean
    -->
    <target name="clean" description="Limpa arquivos de saida">
        <delete dir="${dist}" />
        <delete dir="${build}" />
    </target>
</project>
